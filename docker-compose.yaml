version: '3.7'

volumes:
    postgres_data:
        driver: local

networks:
    my_network:
        driver: bridge

services:
    db: 
        image: postgres:13-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        container_name: todo_postgres
        networks: 
            - my_network
        restart: always
        volumes:
            - postgres_data:/var/lib/postgresql/postgres_data
            - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
        ports:
            - ${POSTGRES_PORT}:${POSTGRES_PORT}
        command: -p ${POSTGRES_PORT}

    db_test: 
        image: postgres:13-alpine
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        container_name: todo_postgres_test
        networks: 
            - my_network
        restart: always
        volumes:
            - ./scripts/init_db_test.sql:/docker-entrypoint-initdb.d/init_db_test.sql
        ports:
            - ${POSTGRES_PORT}:${POSTGRES_PORT}
        command: -p ${POSTGRES_PORT}

    app:
        image: golang:1.14-alpine
        environment:
            ENVIRONMENT: dev
            CONNECTIONSTRING: ${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_IP}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=${POSTGRES_SLLMODE}
        networks: 
            - my_network
        volumes:
            - .:/app
        working_dir: /app
        command: >
            /bin/sh -c "
                CGO_ENABLED=0 go run main.go"
        container_name: todo_app
        ports:
            - 5050:5050
        depends_on:
            - db

    storages_test:
        image: golang:1.14-alpine
        environment:
            ENVIRONMENT: test
            CONNECTIONSTRING: ${POSTGRES_HOST}://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_IP}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=${POSTGRES_SLLMODE}
        networks: 
            - my_network
        volumes:
            - .:/app
        working_dir: /app
        command: >
            /bin/sh -c "
                CGO_ENABLED=0 go test ./internal/storages/postgres"
        container_name: todo_app_test
        depends_on:
            - db_test
        
